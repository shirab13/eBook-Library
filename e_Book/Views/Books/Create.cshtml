@model e_Book.Models.Book

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<!-- Display error or success messages -->
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- כותרת -->
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- מחבר -->
        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- הוצאה לאור -->
        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- מחיר קנייה -->
        <div class="form-group">
            @Html.LabelFor(model => model.PriceBuy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceBuy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceBuy, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- מחיר קודם -->
        <div class="form-group">
            @Html.LabelFor(model => model.PreviousPrice, "Previous Price", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PreviousPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PreviousPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- תאריך סיום הנחה -->
        <div class="form-group">
            @Html.LabelFor(model => model.DiscountEndDate, "Discount End Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiscountEndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscountEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- מחיר השאלה -->
        <div class="form-group">
            @Html.LabelFor(model => model.PriceBorrow, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PriceBorrow, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceBorrow, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- עותקים זמינים -->
        <div class="form-group">
            @Html.LabelFor(model => model.AvailableCopies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AvailableCopies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AvailableCopies, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- פורמט -->
        <div class="form-group">
            @Html.LabelFor(model => model.Format, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Format, new SelectList(new[] { "PDF", "EPUB", "MOBI", "FB2" }), "בחר פורמט", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Format, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- ז'אנר -->
        <div class="form-group">
            @Html.LabelFor(model => model.Genre, "Ganre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Genre, new SelectList(new[] { "Romance", "Action", "Drama", "Comedy", "Thriller", "Science Fiction", "Fantasy", "Horror", "Adventure", "Historical Fiction", "Biography", "Mystery", "Self-Help", "Educational", "Poetry" }), "בחר ז'אנר", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- פופולריות -->
        <div class="form-group">
            @Html.LabelFor(model => model.Popularity, "Popularity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Popularity, new SelectList(Enumerable.Range(1, 5).Select(x => new { Value = x, Text = x.ToString() }), "Value", "Text"), "בחר פופולריות", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Popularity, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- שנה -->
        <div class="form-group">
            @Html.LabelFor(model => model.YearPublished, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearPublished, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearPublished, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- ניתן להשאלה -->
        <div class="form-group">
            @Html.LabelFor(model => model.IsBorrowable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsBorrowable)
                    @Html.ValidationMessageFor(model => model.IsBorrowable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AgeRestriction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AgeRestriction,
                    new SelectList(new[] { "All Ages", "8+", "12+", "16+", "18+" }, "בחר הגבלת גיל"),
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AgeRestriction, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- כתובת תמונה -->
        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, "Image URL", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- תקציר -->
        <div class="form-group">
            @Html.LabelFor(model => model.Synopsis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Synopsis, new { @class = "form-control", rows = 5 })
                @Html.ValidationMessageFor(model => model.Synopsis, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- כפתור שמירה -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
